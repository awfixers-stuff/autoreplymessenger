name: Dependency Updates

on:
  schedule:
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check for dependency updates
        run: ./gradlew dependencyUpdates

      - name: Generate dependency report
        run: ./gradlew dependencyUpdates -DoutputFormatter=json -DoutputDir=build/dependencyUpdates

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-report
          path: build/dependencyUpdates/

      - name: Comment on PR if updates available
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'build/dependencyUpdates/report.json';
            if (fs.existsSync(path)) {
              const report = JSON.parse(fs.readFileSync(path, 'utf8'));
              const updates = report.outdated.dependencies;
              if (updates.length > 0) {
                let comment = '## Dependency Updates Available\n\n';
                updates.forEach(update => {
                  comment += `- ${update.group}:${update.name} ${update.version} -> ${update.available.release}\n`;
                });
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            }
